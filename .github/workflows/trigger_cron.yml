# This is a basic workflow to help you get started with Actions

name: Engen Regression Suite

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule:
    - cron: '00 17 * * *'
#  push:
#    branches: [ add_label_while_exporting ]
#  pull_request:
#    branches: [ add_label_while_exporting ]

    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
      JIRA_API_TOKEN : ${{ secrets.JIRA_TOKEN }}
      JIRA_CLIENT_ID : ${{ secrets.JIRA_CLIENT_ID }}
      JIRA_CLIENT_SECRET : ${{ secrets.JIRA_CLIENT_SECRET }}
      JIRA_USERNAME : ${{ secrets.JIRA_USERNAME }}
      MONGO_USERNAME : ${{secrets.MONGO_USERNAME}}
      MONGO_PASSWORD : ${{secrets.MONGO_PASSWORD}}
      MONGO_HOST : ${{secrets.MONGO_HOST}}
      MONGO_PORT : ${{secrets.MONGO_PORT}}



    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: setup python
        uses: actions/setup-python@v2
        with:
            python-version: 3.9.6

      # setting up pip
      - name: install pip
        run: |
             python -m pip install --upgrade pip

      - name: install requirements.txt
        run: |
              pip install -r requirements.txt

      - name: Get features from JIRA
        run: |
             python com\kantech\ng\automation\utilities\get_features_from_jira.py regression 10037

      - name: Execute Tests using pytest
        if : always()
        run: |
          pytest -v -s test_cases\steps_jira\ --cucumberjson=results/output.json --disable-warnings


      - name: Export result to JIRA and Send Regression Email
        if : always()
        run: |
             python com\kantech\ng\automation\utilities\export_to_jira.py regression PI_16 > export_log.txt
             Get-Content .\export_log.txt
             $exportregressionfile = Get-Content .\export_log.txt
             $ticket_id = $exportregressionfile[2].Substring(40,8)
             $test_cases_passed =  $exportregressionfile[5].Substring(24,4)
             $test_cases_failed =  $exportregressionfile[6].Substring(24,3)
             $regression_jira_url = "https://kantech.atlassian.net/browse/" + $ticket_id
             python com\kantech\ng\automation\utilities\email_utility.py ${{ secrets.EMAIL_USERNAME }} ${{ secrets.SENDGRID_API_KEY }}  $regression_jira_url ${{ secrets.SMTP_HOST }} ${{ secrets.SMTP_PORT }} $test_cases_passed $test_cases_failed
